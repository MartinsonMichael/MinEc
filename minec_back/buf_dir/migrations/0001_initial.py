# Generated by Django 2.1.7 on 2019-06-09 13:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateField(null=True, verbose_name='дата создания компании')),
                ('date_add_to_base', models.DateField(verbose_name='дата добавления в базу')),
                ('date_disappear', models.DateField(null=True, verbose_name='дата прекращения существования')),
                ('still_alive', models.BooleanField(default=True, verbose_name='еще существует?')),
                ('life_duration_years', models.IntegerField(verbose_name='продолжительность существования (лет)')),
                ('still_not_found', models.BooleanField(null=True, verbose_name='technical filed')),
            ],
        ),
        migrations.CreateModel(
            name='BaseIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income', models.FloatField(verbose_name='доход')),
                ('outcome', models.FloatField(verbose_name='расход')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('inn', models.IntegerField(primary_key=True, serialize=False, verbose_name='ИНН')),
                ('is_ip', models.BooleanField(null=True, verbose_name='является ИП')),
                ('short_title', models.TextField(max_length=100, null=True, verbose_name='краткое название (не для ИП)')),
                ('owner_name', models.TextField(max_length=100, null=True, verbose_name='имя владельца (для ИП)')),
                ('location_code', models.IntegerField(null=True, verbose_name='код региона')),
                ('region_name', models.TextField(choices=[(1, 'адыгея республика'), (2, 'башкортостан республика'), (3, 'бурятия республика'), (4, 'алтай республика'), (5, 'дагестан республика'), (6, 'ингушетия республика'), (7, 'кабардино-балкарская республика'), (8, 'калмыкия республика'), (9, 'карачаево-черкесская республика'), (10, 'карелия республика'), (11, 'коми республика'), (12, 'марий эл республика'), (13, 'мордовия республика'), (14, 'саха /якутия/ республика'), (15, 'северная осетия - алания республика'), (16, 'татарстан республика'), (17, 'тыва республика'), (18, 'удмуртская республика'), (19, 'хакасия республика'), (20, 'чеченская республика'), (21, 'чувашская республика - чувашия'), (22, 'алтайский край'), (23, 'краснодарский край'), (24, 'красноярский край'), (25, 'приморский край'), (26, 'ставропольский край'), (27, 'хабаровский край'), (28, 'амурская область'), (29, 'архангельская область'), (30, 'астраханская область'), (31, 'белгородская область'), (32, 'брянская область'), (33, 'владимирская область'), (34, 'волгоградская область'), (35, 'вологодская область'), (36, 'воронежская область'), (37, 'ивановская область'), (38, 'иркутская область'), (39, 'калининградская область'), (40, 'калужская область'), (41, 'камчатский край'), (42, 'кемеровская область'), (43, 'кировская область'), (44, 'костромская область'), (45, 'курганская область'), (46, 'курская область'), (47, 'ленинградская область'), (48, 'липецкая область'), (49, 'магаданская область'), (50, 'московская область'), (51, 'мурманская область'), (52, 'нижегородская область'), (53, 'новгородская область'), (54, 'новосибирская область'), (55, 'омская область'), (56, 'оренбургскаяобласть область'), (57, 'орловская область'), (58, 'пензенская область'), (59, 'пермский край'), (60, 'псковская область'), (61, 'ростовская область'), (62, 'рязанская область'), (63, 'самарская область'), (64, 'саратовская область'), (65, 'сахалинская область'), (66, 'свердловская область'), (67, 'смоленская область'), (68, 'тамбовская область'), (69, 'тверская область'), (70, 'томская область'), (71, 'тульская область'), (72, 'тюменская область'), (73, 'ульяновская область'), (74, 'челябинская область'), (75, 'забайкальский край'), (76, 'ярославская область'), (77, 'москва город'), (78, 'санкт-петербург город'), (79, 'еврейская автономная область'), (83, 'ненецкий автономный округ'), (86, 'ханты-мансийский автономный округ - югра автономный округ'), (87, 'чукотский автономный округ'), (89, 'ямало-ненецкий автономный округ'), (91, 'крым республика'), (92, 'севастополь город')], default='НЕИЗВЕСТНО', verbose_name='Название региона')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeNum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_num', models.IntegerField(null=True, verbose_name='количество работников')),
                ('inn', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dbcontroller.Company')),
            ],
        ),
        migrations.CreateModel(
            name='TaxBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_fns', models.DateField(null=True, verbose_name='время добавления ФНСом информации о налогах')),
                ('tax_atribute_0', models.FloatField(default=0, verbose_name='Задолженность и перерасчеты по ОТМЕНЕННЫМ НАЛОГАМ  и сборам и иным обязательным платежам  (кроме ЕСН, страх. Взносов)')),
                ('tax_atribute_1', models.FloatField(default=0, verbose_name='Транспортный налог')),
                ('tax_atribute_2', models.FloatField(default=0, verbose_name='Водный налог')),
                ('tax_atribute_3', models.FloatField(default=0, verbose_name='Налог, взимаемый в связи с  применением упрощенной  системы налогообложения')),
                ('tax_atribute_4', models.FloatField(default=0, verbose_name='Налог на добавленную стоимость')),
                ('tax_atribute_5', models.FloatField(default=0, verbose_name='Земельный налог')),
                ('tax_atribute_6', models.FloatField(default=0, verbose_name='Акцизы, всего')),
                ('tax_atribute_7', models.FloatField(default=0, verbose_name='НЕНАЛОГОВЫЕ ДОХОДЫ, администрируемые налоговыми органами')),
                ('tax_atribute_8', models.FloatField(default=0, verbose_name='Единый налог на вмененный доход для отдельных видов  деятельности')),
                ('tax_atribute_9', models.FloatField(default=0, verbose_name='Налог на добычу полезных ископаемых')),
                ('tax_atribute_10', models.FloatField(default=0, verbose_name='Страховые и другие взносы на обязательное пенсионное страхование, зачисляемые в Пенсионный фонд Российской Федерации')),
                ('tax_atribute_11', models.FloatField(default=0, verbose_name='Страховые взносы на обязательное медицинское страхование работающего населения, зачисляемые в бюджет Федерального фонда обязательного медицинского страхования')),
                ('tax_atribute_12', models.FloatField(default=0, verbose_name='Налог на имущество организаций')),
                ('tax_atribute_13', models.FloatField(default=0, verbose_name='Налог на прибыль')),
                ('tax_atribute_14', models.FloatField(default=0, verbose_name='Торговый сбор')),
                ('tax_atribute_15', models.FloatField(default=0, verbose_name='Налог на доходы физических лиц')),
                ('tax_atribute_16', models.FloatField(default=0, verbose_name='Единый сельскохозяйственный налог')),
                ('tax_atribute_17', models.FloatField(default=0, verbose_name='Сборы за пользование объектами животного мира  и за пользование объектами ВБР')),
                ('tax_atribute_18', models.FloatField(default=0, verbose_name='Страховые взносы на обязательное социальное страхование на случай временной нетрудоспособности и в связи с материнством')),
                ('tax_atribute_19', models.FloatField(default=0, verbose_name='Утилизационный сбор')),
                ('tax_atribute_20', models.FloatField(default=0, verbose_name='Налог на игорный')),
                ('tax_atribute_21', models.FloatField(default=0, verbose_name='Государственная пошлина')),
                ('inn', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dbcontroller.Company')),
            ],
        ),
        migrations.AddField(
            model_name='baseincome',
            name='inn',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dbcontroller.Company'),
        ),
        migrations.AddField(
            model_name='alive',
            name='inn',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dbcontroller.Company'),
        ),
    ]
